多意图并行处理测试案例

  基础测试（单请求包含多意图）

  #!/bin/bash

  echo "=== 多意图并行处理测试 ==="

  # 测试1：同时包含订机票和查余额的复合请求
  echo -e "\n=== 测试1：复合意图请求 ==="
  curl -X POST "http://localhost:8000/api/v1/chat/interact" \
    -H "Content-Type: application/json" \
    -d '{
      "user_id": "multi-intent-user-01",
      "input": "帮我订明天去上海的机票，然后查一下银行卡余额"
    }'

  echo -e "\n"

  # 测试2：另一种复合表达
  echo -e "\n=== 测试2：另一种复合表达 ==="
  curl -X POST "http://localhost:8000/api/v1/chat/interact" \
    -H "Content-Type: application/json" \
    -d '{
      "user_id": "multi-intent-user-02", 
      "input": "我要买机票去北京，顺便帮我查查账户余额"
    }'

  echo -e "\n"

  # 测试3：三个意图的复合
  echo -e "\n=== 测试3：三重意图测试 ==="
  curl -X POST "http://localhost:8000/api/v1/chat/interact" \
    -H "Content-Type: application/json" \
    -d '{
      "user_id": "multi-intent-user-03",
      "input": "帮我订后天从深圳到广州的机票，查一下余额，然后帮我改个密码"
    }'

  单独测试报文

  测试1：基础复合意图

  curl -X POST "http://localhost:8000/api/v1/chat/interact" \
    -H "Content-Type: application/json" \
    -d '{
      "user_id": "multi-intent-user-01",
      "input": "帮我订明天去上海的机票，然后查一下银行卡余额"
    }'

  测试2：不同的复合表达

  curl -X POST "http://localhost:8000/api/v1/chat/interact" \
    -H "Content-Type: application/json" \
    -d '{
      "user_id": "multi-intent-user-02", 
      "input": "我要买机票去北京，顺便帮我查查账户余额"
    }'

  测试3：包含连接词的复合意图

  curl -X POST "http://localhost:8000/api/v1/chat/interact" \
    -H "Content-Type: application/json" \
    -d '{
      "user_id": "multi-intent-user-03",
      "input": "订机票和查余额"
    }'

  测试4：时间顺序的复合意图

  curl -X POST "http://localhost:8000/api/v1/chat/interact" \
    -H "Content-Type: application/json" \
    -d '{
      "user_id": "multi-intent-user-04",
      "input": "先帮我查余额，再订明天去上海的机票"
    }'

  测试5：带详细信息的复合意图

  curl -X POST "http://localhost:8000/api/v1/chat/interact" \
    -H "Content-Type: application/json" \
    -d '{
      "user_id": "multi-intent-user-05",
      "input": "我要订明天下午从北京到上海的机票，2个人，还要查一下储蓄卡的余额"
    }'

  预期行为分析

  理想的多意图并行处理

  系统应能够：
  1. 识别多个意图：同时识别出book_flight和check_balance
  2. 意图优先级排序：根据业务逻辑或用户表达顺序排序
  3. 并行槽位提取：为每个意图提取相应的槽位
  4. 协调处理：合理安排意图的执行顺序
  5. 统一响应：提供清晰的多意图处理结果

  可能的系统响应模式

  模式A：顺序处理
  {
    "response": "我为您识别到两个请求：\n1. 订明天去上海的机票\n2. 查询银行卡余额\n\n让我们先处理机票预订，请问您的出发城市是？",
    "intents": ["book_flight", "check_balance"],
    "current_intent": "book_flight",
    "pending_intents": ["check_balance"]
  }

  模式B：歧义处理
  {
    "response": "您提到了多个需求，请问您希望我优先处理哪一个？\n1. 订机票\n2. 查余额",
    "is_ambiguous": true,
    "candidates": [
      {"intent": "book_flight", "confidence": 0.85},
      {"intent": "check_balance", "confidence": 0.80}
    ]
  }

  模式C：拆分处理
  {
    "response": "我为您拆分为两个任务处理。",
    "tasks": [
      {"task_id": "1", "intent": "book_flight", "status": "processing"},
      {"task_id": "2", "intent": "check_balance", "status": "pending"}
    ]
  }

  关键验证点

  1. 多意图识别能力：是否能识别出所有意图
  2. 槽位分配：槽位是否正确分配给对应意图
  3. 处理策略：系统采用的多意图处理策略
  4. 用户体验：响应是否清晰易懂
  5. 上下文管理：多意图间的上下文切换是否正确

⏺ Update Todos
  ⎿  ☒ 准备多意图并行处理测试案例报文

⏺ 测试用例准备完毕

  我已经准备了完整的多意图并行处理测试案例，包括：

  🎯 测试维度

  1. 基础复合意图："帮我订明天去上海的机票，然后查一下银行卡余额"
  2. 不同表达方式："我要买机票去北京，顺便帮我查查账户余额"
  3. 简化表达："订机票和查余额"
  4. 时间顺序："先帮我查余额，再订明天去上海的机票"
  5. 详细信息："我要订明天下午从北京到上海的机票，2个人，还要查一下储蓄卡的余额"

  📋 关键观察点

  - 意图识别结果：是否识别出多个意图
  - 处理策略：系统如何处理多意图（顺序、并行、歧义）
  - 槽位提取：各意图的槽位是否正确提取
  - 用户体验：响应的清晰度和实用性

  建议从最基础的测试案例开始：

  curl -X POST "http://localhost:8000/api/v1/chat/interact" \
    -H "Content-Type: application/json" \
    -d '{
      "user_id": "multi-intent-user-01",
      "input": "帮我订明天去上海的机票，然后查一下银行卡余额"
    }'
